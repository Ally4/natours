.header {
  height: 95vh;
  background-image: linear-gradient(
      to right bottom,
      rgba($color-primary-light, 0.801),
      rgba($color-primary-dark, 0.801)
    ),
    url(../img/hero-small.jpg);
  background-size: cover;
  background-position: top;

  position: relative;

  // -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh,0 100%); // this is for it to get accepted by other browser
  // clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);

  @supports (clip-path: polygon(0 0)) and (-webkit-clip-path: polygon(0 0)) {     //remember as explained in the popup
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh,0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  }

  @media (min-resolution: 192dpi) and (min-width: 37.5em), (min-width: 125em), (-webkit-min-device-pixel-ration: 2) and (min-width: 37.5em), (min-width: 125em){                       //dpi stands for dot per inch, its a universal reference and it is used by the macbook retina (and it is for resolution), and when resolution is higher the condition is applied(the codes in the brackets), the 192dpi is to specify the resolution of DPR:2.0 (dot per resolution) that why some of the codes can work on the DPR:1.0 and other not            ///// the webkit is for safari works and the 2 is for DPR:2.0

    //////////////////converted from px to em because media queries are always in em, and in our case we divid it by 16/////////

    background-image: linear-gradient(
      to right bottom,
      rgba($color-primary-light, 0.801),
      rgba($color-primary-dark, 0.801)
    ),
    url(../img/hero.jpg);
  }

  @include respond(phone) {
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 60vh,0 100%); // this is for it to get accepted by other browser
    clip-path: polygon(0 0, 100% 0, 100% 60vh, 0 100%);
  }

  &__logo-box {
    position: absolute;

    top: 4rem;
    left: 4rem;
  }

  &__logo {
    height: 3.5rem;
  }

  &__text-box {
    // the & is equal to the parent(s) wrapping entity (in this case we should have .header__text-box out of this wrapping)
    position: absolute;

    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
  }
}
